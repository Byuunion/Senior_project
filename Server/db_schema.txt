CREATE TABLE user_login (username VARCHAR(15), 
password_hash VARCHAR(64), 
token VARCHAR(100),
PRIMARY KEY (username)
);
			
CREATE TABLE user_interest (username VARCHAR(15), 
interest VARCHAR(500),
PRIMARY KEY (username, interest),
FOREIGN KEY (username) references user_login(username)
ON DELETE CASCADE
ON UPDATE CASCADE
);
						
CREATE TABLE user_language (username VARCHAR(15), 
language VARCHAR(100), 
PRIMARY KEY (username, language),
FOREIGN KEY (username) references user_login(username)
ON DELETE CASCADE
ON UPDATE CASCADE
);
						
CREATE TABLE user_profile (username VARCHAR(15), 
positive_votes INTEGER NOT NULL DEFAULT 0,
negative_votes INTEGER NOT NULL DEFAULT 0,
current_lat DECIMAL(10, 8) NOT NULL,
current_long DECIMAL(11, 8) NOT NULL,
gender VARCHAR(15),
bio TEXT
PRIMARY KEY (username),
FOREIGN KEY (username) references user_login(username)
ON DELETE CASCADE
ON UPDATE CASCADE
);

CREATE TABLE user_group (id INT AUTO_INCREMENT,
username VARCHAR(15),
PRIMARY KEY (id, username),
FOREIGN KEY (username) references user_login(username)
ON DELETE CASCADE
ON UPDATE CASCADE
);

CREATE TABLE user_invite (username_from VARCHAR(15),
username_to VARCHAR(15),
PRIMARY KEY (username_from, username_to),
FOREIGN KEY (username_from) references user_login(username)
ON DELETE CASCADE
ON UPDATE CASCADE,
FOREIGN KEY (username_to) references user_login(username)
ON DELETE CASCADE
ON UPDATE CASCADE
);

CREATE TABLE user_blacklist (username VARCHAR(15), 
block_username VARCHAR(15),
PRIMARY KEY (username, block_username),
FOREIGN KEY (username) references user_login(username)
ON DELETE CASCADE
ON UPDATE CASCADE,
FOREIGN KEY (block_username) references user_login(username)
ON DELETE CASCADE
ON UPDATE CASCADE
);